{"version":3,"sources":["logo.svg","components/Selector.js","components/data.js","components/MakeOrder.js","components/OrderBook.js","components/Chart.js","App.js","reportWebVitals.js","index.js","styles/selector.module.css"],"names":["Selector","selType","value","make","document","getElementById","book","style","backgroundColor","open","values","enable","disable","Fragment","className","select","block","left","onClick","id","right","React","memo","buy","sell","priceValue","Make","useState","val","setVal","message","setMessage","getId","name","type","order","confirmation","event","preventDefault","price","quantity","notValid","push","selector","color","required","placeholder","onChange","inpText","target","Order","forEach","buyRow","sellRow","status","marginTop","map","row","Chart","Buy","Sell","data","max","concat","reduce","a","b","Math","generateXaxis","i","barValue","key","width","float","fontSize","item","App","selectType","setState","state","this","OrderBook","MakeOrder","execute","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.ab3bcc3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport select from '../styles/selector.module.css';\r\n\r\nconst Selector = ({selType, value}) => {\r\n\r\n    var make = document.getElementById('make');\r\n    var book = document.getElementById('book');\r\n\r\n    if(value === 'order book') {\r\n        if(make) make.style.backgroundColor = 'rgb(206, 203, 203)';\r\n        if(book) book.style.backgroundColor = 'white';\r\n    }\r\n\r\n    const open = (values, enable, disable) => {\r\n        \r\n        selType(values)\r\n\r\n        if(make) make.style.backgroundColor = enable;\r\n        if(book) book.style.backgroundColor = disable;\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <div className={select.block}>\r\n            <div className={select.left} onClick={() => open('make order', 'white', 'rgb(206, 203, 203)')} id='make'>\r\n                Make Order\r\n            </div>\r\n            <div className={select.right} onClick={() => open('order book', 'rgb(206, 203, 203)', 'white')} id='book'>\r\n                Order Book\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default React.memo(Selector);","// I added these order statically, dynamically you can add more orders on make order option.\r\n\r\nconst buy = [\r\n    {'name': 'BHEL', 'price': 328, 'quantity': 100, 'status' : 'hold', 'order': 'Limit', 'color': 'red'},\r\n\r\n    {'name': 'TATA STEEL', 'price': 457, 'quantity': 40, 'status' : 'hold', 'order': 'Market', 'color': 'red'},\r\n\r\n    {'name': 'FinCap', 'price': 568, 'quantity': 60, 'status' : 'hold', 'order': 'Limit', 'color': 'red'},\r\n\r\n    {'name': 'BHEL', 'price': 330, 'quantity': 34, 'status' : 'hold', 'order': 'Market', 'color': 'red'},\r\n\r\n    {'name': 'UPI', 'price': 122, 'quantity': 70, 'status' : 'hold', 'order': 'Limit', 'color': 'red'},\r\n\r\n    {'name': 'TATA STEEL', 'price': 460, 'quantity': 200, 'status' : 'hold', 'order': 'Stop', 'color': 'red'},\r\n\r\n    {'name': 'FinCap', 'price': 572, 'quantity': 25, 'status' : 'hold', 'order': 'Market', 'color': 'red'},\r\n\r\n    {'name': 'BHEL', 'price': 329, 'quantity': 2, 'status' : 'hold', 'order': 'Stop', 'color': 'red'},\r\n\r\n    {'name': 'GRM', 'price': 642, 'quantity': 30, 'status' : 'hold', 'order': 'Limit', 'color': 'red'},\r\n\r\n    {'name': 'BHEL', 'price': 330, 'quantity': 10, 'status' : 'hold', 'order': 'Market', 'color': 'red'}\r\n\r\n];\r\n\r\nconst sell = [\r\n    {'name': 'GRM', 'price': 643, 'quantity': 50, 'status' : 'hold', 'order': 'Limit', 'color': 'red'},\r\n\r\n    {'name': 'TATA STEEL', 'price': 457, 'quantity': 70, 'status' : 'hold', 'order':  'Market', 'color': 'red'},\r\n\r\n    {'name': 'UPI', 'price': 114, 'quantity': 25, 'status' : 'hold', 'order': 'Limit', 'color': 'red'},\r\n\r\n    {'name': 'BHEL', 'price': 329, 'quantity': 30, 'status' : 'hold', 'order': 'Stop', 'color': 'red'},\r\n\r\n    {'name': 'BHEL', 'price': 330, 'quantity': 100, 'status' : 'hold', 'order':  'Market', 'color': 'red'},\r\n\r\n    {'name': 'FinCap', 'price': 330, 'quantity': 40, 'status' : 'hold', 'order': 'Limit', 'color': 'red'},\r\n\r\n    {'name': 'TATA STEEL', 'price': 572, 'quantity': 10, 'status' : 'hold', 'order': 'Limit', 'color': 'red'},\r\n\r\n    {'name': 'GRM', 'price': 638, 'quantity': 60, 'status' : 'hold', 'order':  'Market', 'color': 'red'},\r\n\r\n    {'name': 'UPI', 'price': 120, 'quantity': 32, 'status' : 'hold', 'order': 'Market', 'color': 'red'},\r\n\r\n    {'name': 'BHEL', 'price': 457, 'quantity': 90, 'status' : 'hold', 'order': 'Stop', 'color': 'red'}\r\n];\r\n\r\nconst priceValue = {\r\n    'BHEL': 330,\r\n    'TATA STEEL': 457,\r\n    'UPI': 120,\r\n    'GRM': 638,\r\n    'FinCap': 572\r\n}\r\n\r\nexport {sell, buy, priceValue}","import React, {useState} from 'react';\r\nimport '../styles/makeorder.css';\r\nimport {priceValue, buy, sell} from '../components/data.js';\r\nimport { waitForDomChange } from '@testing-library/react';\r\n\r\nconst Make = ({open}) => {\r\n\r\n    const [val, setVal] = useState({'quantity': '', 'price': ''});\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const setQuantity = (inpText) => {\r\n        setVal({\r\n            ...val,\r\n            quantity: inpText\r\n        })\r\n    }\r\n\r\n    const setPrice = (inpText) => {\r\n        setVal({\r\n            ...val,\r\n            price: inpText\r\n        })\r\n    }\r\n\r\n    const notValid = (name, type, order) => {\r\n        if(name.value === 'Select Company' || type.value === 'Select Type' || order.value === 'Select Order' || val.price == '' || val.quantity == '' ) {return true}\r\n    }\r\n\r\n    const getId = (val) => {return document.getElementById(val)};\r\n\r\n    var name = getId('name');\r\n    var type = getId('type');\r\n    var order = getId('order');\r\n\r\n    const confirmation = (event) => {\r\n        event.preventDefault()\r\n\r\n        setMessage('');\r\n\r\n        if(notValid(name, type, order)) {\r\n            setMessage('alert')\r\n            return\r\n        }\r\n\r\n        if(type.value === 'ASK(SELL)') {\r\n            sell.push({'name': name.value, 'price': val.price, 'quantity': val.quantity, 'status' : 'hold', 'order': order.value});\r\n        }\r\n        else {\r\n            buy.push({'name': name.value, 'price': val.price, 'quantity': val.quantity, 'status' : 'hold', 'order': order.value});\r\n        }\r\n\r\n        open('order book')\r\n    }\r\n\r\n    const selector = () => {\r\n        order = getId('order');\r\n        name = getId('name')\r\n        if(order && name.value !='Select Company' && order.value === 'Market') {\r\n            document.getElementById('price').value = priceValue[name.value];\r\n            setVal({\r\n                ...val,\r\n                price: priceValue[name.value]\r\n            })\r\n        }\r\n        else document.getElementById('price').value = '';\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <form>\r\n            <div className='block'>\r\n                {\r\n                    (message==='alert')?\r\n                        <p style={{color: 'red'}}>Fill all the feilds</p>\r\n                    : ''\r\n                }\r\n                <div className='blocks block1'>\r\n                    <select className='block1-val' id='name' required onClick={selector}>\r\n                        <option>Select Company</option>\r\n                        <option>BHEL</option>\r\n                        <option>TATA STEEL</option> \r\n                        <option>UPI</option>\r\n                        <option>GRM</option>\r\n                        <option>FinCap</option>\r\n                    </select>\r\n                </div>\r\n                <div className='blocks' required>\r\n                    <select id='type'>\r\n                        <option>Select Type</option>\r\n                        <option>ASK(SELL)</option>\r\n                        <option>BID(BUY)</option>\r\n                    </select>\r\n                    <select id='order' required onClick={selector}>\r\n                        <option>Select Order</option>\r\n                        <option>Market</option>\r\n                        <option>Limit</option>\r\n                        <option>Stop</option>\r\n                    </select>\r\n                </div>\r\n                <div className='blocks'>\r\n                    <input type='text' placeholder='Enter Quantity(Shares)' className='input' onChange={(event) => setQuantity(event.target.value)} required/>\r\n                    <input type='text' placeholder='Enter Price' id='price' className='input' onChange={(event) => setPrice(event.target.value)} required/>\r\n                </div>\r\n                <button className='confirm' onClick={(event) => confirmation(event)}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default React.memo(Make);","import React from 'react';\r\nimport '../styles/orderbook.css';\r\nimport {buy, sell} from '../components/data';\r\n\r\nconst Order = () => {\r\n\r\n    buy.forEach((buyRow) => {\r\n        sell.forEach((sellRow) => {\r\n\r\n            if(buyRow.order === 'Limit' && buyRow.price > sellRow.price && buyRow.name === sellRow.name || buyRow.order === 'Stop' && buyRow.price < sellRow.price && buyRow.name === sellRow.name && buyRow.order === 'Market' && buyRow.price === sellRow.price) {\r\n                buyRow.status = 'bought';\r\n                buyRow.color = 'green';\r\n\r\n                sellRow.status = 'Sold';\r\n                sellRow.color = 'blue';\r\n                return\r\n            }\r\n\r\n        })\r\n    })\r\n\r\n    return <React.Fragment>\r\n        <div style={{marginTop: '20px'}}>\r\n            <div className='table-title'>\r\n                <span className='underline'>ASK(SELL) Table</span>\r\n            </div>\r\n            <table>\r\n                <tr>\r\n                    <th>NAME</th>\r\n                    <th>PRICE</th>\r\n                    <th>QUANTITY</th>\r\n                    <th>Order</th>\r\n                    <th>STATUS</th>\r\n                </tr>\r\n                {\r\n                    sell.map((row, id) => {\r\n                        return <tr key={id}>\r\n                            <td>{row.name}</td>\r\n                            <td>{row.price}</td>\r\n                            <td>{row.quantity}</td>\r\n                            <td>{row.order}</td>\r\n                            <td style={{color: row.color}}>{row.status}</td>\r\n                        </tr>\r\n                    })\r\n                }\r\n            </table>\r\n            <div className='table-title'>\r\n                <span className='underline'>BID(BUY) Table</span>\r\n            </div>\r\n            <table>\r\n                <tr>\r\n                    <th>NAME</th>\r\n                    <th>PRICE</th>\r\n                    <th>QUANTITY</th>\r\n                    <th>Order</th>\r\n                    <th>STATUS</th>\r\n                </tr>\r\n                {\r\n                    buy.map((row, id) => {\r\n                        return <tr key={id}>\r\n                            <td>{row.name}</td>\r\n                            <td>{row.price}</td>\r\n                            <td>{row.quantity}</td>\r\n                            <td>{row.order}</td>\r\n                            <td style={{color: row.color}}>{row.status}</td>\r\n                        </tr>\r\n                    })\r\n                }\r\n            </table>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default React.memo(Order);","import React from 'react';\r\nimport '../styles/chart.css';\r\nimport {buy, sell} from '../components/data';\r\n\r\nconst Chart = () => {\r\n    const Buy = [];\r\n    const Sell = [];\r\n\r\n    buy.forEach(data => {\r\n        Buy.push(data.price);\r\n    })\r\n\r\n    sell.forEach(data => {\r\n        Sell.push(data.price)\r\n    })\r\n    \r\n    const max = Buy.concat(Sell).reduce((a, b) => {\r\n        return Math.max(a, b);\r\n    })\r\n\r\n    const generateXaxis = [];\r\n\r\n    for(var i=0;i<=max+10;i+=50) generateXaxis.push(i);\r\n\r\n    return <React.Fragment>\r\n        <span className='title'>Chart</span>\r\n        <div className='block-size'>\r\n\r\n            <div className='buyer'>\r\n                <span className='b-title'>Buy Chart</span>\r\n                {\r\n                    Buy.map((barValue, key) => {\r\n                        return <div className='bar' key={key}>\r\n                            <div className='buy-progress' id='buy' style={{width: barValue+'px'}}>\r\n                                <span style={{float: 'right', color: 'black'}}>{key+1}</span>\r\n                                <span style={{fontSize: '20px'}}>{barValue}</span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n                <div>\r\n                    {\r\n                        generateXaxis.map(item => {\r\n                            return <div>\r\n                                <div className='item' style={{float: 'right'}}>\r\n                                    <span style={{float: 'right'}}>{item}</span>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='seller'>\r\n                <span className='s-title'>Sell Chart</span>\r\n                {\r\n                    Sell.map((barValue, key) => {\r\n                        return <div className='bar' key={key}>\r\n                            <div className='sell-progress' id='sell' style={{width: barValue+'px'}}>\r\n                                <span style={{float: 'left', color: 'black'}}>{key+1}</span>\r\n                                <span style={{fontSize: '20px'}}>{barValue}</span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n                <div>\r\n                    {\r\n                        generateXaxis.map(item => {\r\n                            return <div style={{width: (max+50)+\"px\"}}>\r\n                                <div className='item' style={{float: 'left'}}>\r\n                                    <span style={{float: 'left'}}>{item}</span>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default React.memo(Chart);","import logo from './logo.svg';\nimport './App.css';\nimport {PureComponent} from 'react';\nimport Selector from './components/Selector';\nimport MakeOrder from './components/MakeOrder';\nimport OrderBook from './components/OrderBook';\nimport Chart from './components/Chart';\n\nclass App extends PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      type: ''\n    }\n  }\n\n  selectType = (name) => {\n    this.setState({\n      type: name\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <span className='title'>Order Book</span>\n        <div className='block-size'>\n          <Selector selType={this.selectType} value={this.state.type}/>\n          {\n            (this.state.type === 'order book')?\n              <OrderBook/>\n              :\n              <MakeOrder open={this.selectType}/>\n          }\n        </div>\n        <Chart execute={this.state.type}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"selector_block__110yL\",\"left\":\"selector_left__13eoi\",\"right\":\"selector_right__3y8cs\"};"],"sourceRoot":""}